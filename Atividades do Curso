programa {
  
  inteiro numero = 0
  funcao inteiro numeroDigitado(inteiro numero){
  retorne(numero)
  }
 
  funcao inicio(){
    escreva("Digite numero qualquer: \n")
    leia(numero)
    escreva("O usuario digitou o numero:",numeroDigitado(numero))

  }  
  
}
===========================================================================================================

programa {

  inteiro num1
  inteiro num2 

  funcao pedirnumero(){
    escreva("escreva o primeiro numero \n")
    leia(num1)
    escreva("escreva o segundo numero \n")
    leia(num2)
    escreva("A soma seria:",somador(num1, num2), "\n")
    escreva("A divisao seria:",divisor(num1,num2), "\n")
    escreva("A multiplicação seria:",multiplicador(num1,num2),"\n")
    escreva("O diminuidor seria:",diminuidor(num1,num2), "\n")



  }
  
  funcao real somador(inteiro num1, inteiro num2){
    retorne(num1+num2) 
  }
  funcao real divisor(inteiro num1, inteiro num2){
    retorne(num1/num2)
  }
  funcao real multiplicador(inteiro num1, inteiro num2){
    retorne(num1*num2)
  } 
  funcao real diminuidor(inteiro num1, inteiro num2){
    retorne(num1-num2)
  }
  funcao inicio(){
    pedirnumero()

  }
}
=========================================================================================
programa {
  
  inteiro num1 
  inteiro num2 
  inteiro num3 

  
  
  função inteira pedirNumero() {
    escreva("Digite o primeiro numero!: \n")
    leia(num1)
    escreva("Digite o segundo numero!: \n")
    leia(num2)
    escreva("Digite o terceiro numero!: \n")
    leia(num3)
    escreva("A soma dos três numeros é: ",somarNumero(num1,num2,num3))
  }
  função inteira somarNumero(){
    retorno(num1+num2+num3)
  }
  função inicio(){
    pedirNumero()
  }
}
=================================================================================================
programa {
  
  inteiro repetidorGlobal
  
  funcao repetidor(inteiro repeticoes) {
    para(inteiro i = 0; i < repetidorGlobal; i++){
      escreva("Bom Dia!!! \n")
    }  
  }
  funcao inicio(){
    escreva("Digite a quantidade de vezes que deseja ler 'bom dia' \n")
    leia(repetidorGlobal)
    repetidor(repetidorGlobal)
  }
}
===============================================================================================
programa {
    
      cadeia texto
      
      funcao gerador() {
          escreva("Ola mundo \n")
          leia(texto)
      funcao inicio(){

        para(inteiro i = 0; i < 5; i++){
          gerador()
      }
       }
==================================================================================================       
programa {
  
  inteiro repetidorGlobal = 0

  funcao repetidor(inteiro repeticoes) {
    
    para(inteiro i = 0; i < 5; i++){
     
    escreva("ola mundo \n") 
    } 
  } 
  funcao inicio(){
    escreva("Digite a quantidade de repeticoes \n")
      
      leia(repetidorGlobal)
      
      repetidor(repetidorGlobal)
      
      
  }
    
}
================================================================================================
programa {
  
    
  funcao real divisaoDeNumeros(inteiro num1, inteiro num2, inteiro num3){
    retorne (num1 + num2 + num3) /3
  }
  funcao inicio(){
    escreva("sua media é: " ,divisaoDeNumeros(1,1,1))
  }
}
================================================================================================
programa {
  funcao inicio() {
    
inteiro posicoes[10]

para(inteiro i = 0; i < 10; i++){
  posicoes[i] = (i + 1) * 5

  
    }
escreva(posicoes)
  }
}
=================================================================================================
programa {
  
  
  inteiro maioridade = 0
  inteiro numeroGlobal[6]
  
  funcao repetidor(){
    para(inteiro i = 0; i < 6; i++){
      escreva("Digite aqui a sua idade \n")
      leia(numeroGlobal[i])
      se(numeroGlobal[i] > maioridade){
        maioridade = numeroGlobal[i]
      }
    }  
    escreva("A maior idade é " ,maioridade)
  }

    funcao inicio() {

      repetidor()
      
    }
}
===================================================================================================
programa {
  
  
  real maiornota = 0
  real notas[4]
  real media = 0
  real soma = 0

  funcao armazenadorDeNota(){
    para(inteiro i = 0; i < 4; i++){
      escreva("Digite aqui a sua nota! \n")
      leia(notas[i])
      obterNotas(notas[i])
      se(notas[i] > maiornota){
          maiornota = notas[i]
        
      }
      
    }  
        
  }
  funcao obterNotas(real num1){
   soma = soma + num1
    
  
  }
  funcao divisaoDeNotas(){
    media = soma / 4
  }

  funcao inicio(){
    armazenadorDeNota()
    divisaoDeNotas()
    escreva(" A maior nota é " ,maiornota)
    escreva(" A media é " ,media)
  }
 
}
=====================================================================================================
programa {
  
  inteiro aloMundoGlobal = 0
  
  funcao aloMundo(inteiro repeticoes) {
    para(inteiro i = 0; i < aloMundoGlobal; i++){
      escreva("Alo mundo \n")   
    }
  }

  funcao inicio(){
    escreva("digite a quantidade de repetições: \n")
    leia(aloMundoGlobal)
    aloMundo(aloMundoGlobal)
  }
}
==========================================================================================================
programa {
  
  funcao cadeia aloMundo(){
    retorne "Alo Mundo!"
  }
  funcao inicio(){
    escreva(aloMundo())
  }

}
=================================================================================================
programa {
  
  cadeia nomeglobal[5]
  
  funcao armazenadorDeNome() {
    para(inteiro i = 0; i < 5; i++){
      escreva("Digite seu nome!: \n")
      leia(nomeglobal[i]) 
    }
  }
  funcao mesangemUsuario(){
    para(inteiro i = 0; i < 5; i++){
      escreva("Bom dia ",nomeglobal[i]," é um prazer ter voce aqui \n")
    }    
  }

  funcao inicio(){
    armazenadorDeNome()
    mesangemUsuario()
    
  }
}
isso vai escrever 5 nomes e dizer bom dia e que é um prazer telos aqui.
=======================================================================================================
programa {
  
  cadeia nomeGlobal[5]
  inteiro notaGlobal[5]
  logico aprovado[5]
  
  funcao armazenadorDeNome() {
    para(inteiro i = 0; i < 5; i++){
      escreva("Digite seu nome!: \n")
      leia(nomeGlobal[i]) 
    }
  }
  funcao mesangemUsuario(){
    para(inteiro i = 0; i < 5; i++){
      escreva("Bom dia ",nomeGlobal[i]," é um prazer ter voce aqui \n")
    }    
  }
  funcao real armazenadorDeNota(){
    para(inteiro i = 0; i < 5; i++){
      escreva("Digite sua nota!: \n")
      leia(notaGlobal[i])
    } 
  }
  funcao  alunoAprovado(){
    para(inteiro i = 0; i < 5; i++){
      se(notaGlobal[i] >= 5 ){
        aprovado[i] = verdadeiro
      }senao{
        aprovado[i] = falso
      }
        
    } 
  } 

  funcao inicio(){
    armazenadorDeNome()
    mesangemUsuario()
    armazenadorDeNota()
    alunoAprovado()
    escreva("Notas \n", aprovado)
  }
}
isso recebe nomes, numeros e diz se é verdadeiro ou falso
=====================================================================================================
programa {

  cadeia nomeVeiculoGlobal[5]
  real precoVeiculoGlobal[5]
  inteiro anoVeiculoGlobal[5]

  funcao cadeia leiaCadeia(){
    cadeia nomeVeiculoLocal
    escreva("Informe o nome do veiculo: ")
    leia(nomeVeiculoLocal)
    retorne nomeVeiculoLocal
  }
  funcao real leiaReal(){
    real precoVeiculoLocal
    escreva("Informe o preco do veiculo: ")
    leia(precoVeiculoLocal)
    retorne precoVeiculoLocal
  }
  funcao real leiaInteiro(){
    inteiro anoVeiculoLocal
    escreva("Informe o ano do veiculo: ")
    leia(anoVeiculoLocal)
    retorne anoVeiculoLocal
  }
  funcao obterNomes(){
    para(inteiro i = 0; i < 5; i++){
      nomeVeiculoGlobal[i] = leiaCadeia()
    }
  }
  funcao obterPrecos(){
    para(inteiro i = 0; i < 5; i++){
      precoVeiculoGlobal[i] = leiaReal()
    }
  }
  funcao obterAno(){
    para(inteiro i = 0; i < 5; i++){
      anoVeiculoGlobal[i] = leiaInteiro()
    }
  }
  funcao cadeia situacaoVeiculo(inteiro anoVeiculo){
   se(anoVeiculo < 2022){
      retorne "Seminovo" 
    }senao se(anoVeiculo <= 2023){
      retorne "0 km"
    }senao{
      retorne "Veiculo do filme de volta para o futuro"
    }
  }

  funcao escrevaCatalogoVeiculos(){
    para(inteiro i = 0; i < 5; i++){
        escreva(
        "modelo:",
        nomeVeiculoGlobal[i],
        " valor R$",
        precoVeiculoGlobal[i],
        " Ano:",
        anoVeiculoGlobal[i],
        ", ",
        situacaoVeiculo(anoVeiculoGlobal[i]),
        "\n"
      )
    }
  }
  
  funcao inicio(){
    obterNomes()
    obterPrecos()
    obterAno()
    escrevaCatalogoVeiculos()
    
  }
}
recebe nomes de carros o valor o ano e diz mais coisas.
===============================================================================================================================================
programa {
  
  inclua biblioteca Util --> u
  inteiro nomeMatriz[6][6] = {
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1},
    {1,1,1,1,1,1}
  }
 
  funcao inicio() {
    para(inteiro i = 0; i < 6; i++){
      para(inteiro j = 0; j < 6; j++){
        u.aguarde(500)
        escreva("linha ", i, " x ", "coluna:", j,"Valor na posição: ",nomeMatriz[i][j], "\n")
      }
    }
  }
}
======================================================================================================================
programa {
  
  inclua biblioteca Util --> u
  inteiro nomeMatriz[6][6]
  inteiro const comparacao = 3
    
  funcao preencherMatriz() {
    escreva("\nVai preencher a matriz \n")
    para(inteiro i = 0; i < 6; i++){
      para(inteiro j = 0; j < 6; j++){
        nomeMatriz[i][j] = u.sorteia(1,5)
      }
    }
    escreva("\npreencheu a matriz \n")
  }
  funcao varrerMatriz(){
    escreva("\nvai varrer a matriz \n")
    para(inteiro i = 0; i < 6; i++){
      para(inteiro j = 0; j < 6; j++){
        se(compararDoisNumeros(nomeMatriz[i][j])){
          escreva("\nNa posição ", i,"x", j," foi encontrado o numero ",comparacao "\n")
        }
      }
    }
    escreva("\nFinalizado \n")
  }
  funcao logico compararDoisNumeros( inteiro numeroAtual){
    se(numeroAtual == comparacao){
      retorne verdadeiro
    }senao{
      retorne falso
    }
  }

  funcao inicio (){
  preencherMatriz()
  varrerMatriz()
}
========================================================================================================================================
programa {
  inclua biblioteca Util --> u
  inteiro nomeMatriz[10][10]
    
  funcao preencherMatriz() {
    para(inteiro i = 0; i < 10; i++){
      para(inteiro j = 0; j < 10; j++){
        nomeMatriz[i][j] = u.sorteia(1,9)
      }
    }
  }
  funcao varrerMatriz(){
    para(inteiro i = 0; i < 10; i++){
      escreva("\n")
      para(inteiro j = 0; j < 10; j++){
        escreva("\t")
        escreva(nomeMatriz[i][j])
      
      }
    }
    escreva("\n")
    escreva("\n FINALIZADO")
  }
  ========================================================================================================================================
  programa {
  inclua biblioteca Util --> u
  inteiro nomeMatriz[5][5]
 
    
  funcao preencherMatriz() {
    para(inteiro i = 0; i < 5; i++){
      para(inteiro j = 0; j < 5; j++){
       se(4-i==j){
        nomeMatriz [i][j] = 1 
      }senao{
        nomeMatriz [i][j] = 0
      }
    }

  }
  funcao varrerMatriz(){
    para(inteiro i = 0; i < 5; i++){
      escreva("\n")
      para(inteiro j = 0; j < 5; j++){
        escreva("\t")
        escreva(nomeMatriz[i][j])
        
      }
    }
 
  
  }
  funcao inicio(){
    preencherMatriz()
    varrerMatriz()
  }
}

======================================================================================================================
programa {
  inclua biblioteca Util --> u
  inteiro nomeMatriz[5][5]
 
    
  funcao preencherMatriz() {
    para(inteiro i = 0; i < 5; i++){
      para(inteiro j = 0; j < 5; j++){
       se(i==j){
        nomeMatriz [i][j] = 1 
      }senao{
        nomeMatriz [i][j] = 0
      }
    } 
  
  } 
  funcao preencherMatrizNova() {
      para(inteiro i = 0; i < 5; i++){
      para(inteiro j = 0; j < 5; j++){
       se(4-i==j){
        nomeMatriz [i][j] = 1 
      
    } 
  } 
  funcao varrerMatriz(){
    para(inteiro i = 0; i < 5; i++){
      escreva("\n")
      para(inteiro j = 0; j < 5; j++){
        escreva("\t")
        escreva(nomeMatriz[i][j])
        
      }
    }
 
  
  }
  funcao inicio(){
    preencherMatriz()
    preencherMatrizNova()
    varrerMatriz()
  
  }
}
===============================================================================================================================
  

 programa {
  
  cadeia matriz[8][8] = {
    {0,0,1,1,1,1,0,0},
    {0,1,0,0,0,0,1,0},
    {1,0,1,0,0,1,0,1},
    {1,0,0,0,0,0,0,1},
    {1,0,1,0,0,1,0,1},
    {1,0,0,1,1,0,0,1},
    {0,1,0,0,0,0,1,0},
    {0,0,1,1,1,1,0,0}  
  } 
  funcao varrerMatriz(){
    para(inteiro i = 0; i < 8; i++){
      escreva("\n")
      para(inteiro j = 0; j < 8; j++){
        escreva("\t")
        se(matriz[i][j] == "1"){
          escreva("0")
        }senao{
          escreva(" ")
        }
      }
    }
  }
      
  funcao inicio() {
    varrerMatriz()
  }
}

========================================================================================================================
