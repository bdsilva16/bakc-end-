	TABELA: FUNCIONARIOS 	
ID	NOME  	NASCIMENTO
1	BRENO	03/01/2004
2	ANNA 	14/08/2005
3	INGRID	10/11/2004
		
TRAZ AS INFOMAÇÕE S DO ID SELECIONADO		
		
SELECT ID=2 FROM FUNCIONARIOS 		
SELECT  * FORM FUNCIONARIOS		
WHERE ID = 2 AND 		
		
		
ATUALIZA OS NOMES COM O ID SELECIONADO:
		
UPDATE  FROM FUNCIONARIOS SET		
NOME = 'INGRID DIAS SANTANA' WHERE ID = 3

update livro
set assunto_id = 2
where id = 2;
		
DELETA O NOME SELECIONADO:

DELETE FROM FUNCIONARIOS 		
WHERE NOME = 'NILTON'		
		
TRAZ AS INFOMAÇÕE S DE  2 ID SELECIONADO		
		
		
SELECT  * FORM FUNCIONARIOS		
WHERE ID = 2 AND ID = 3		
		
create: cria? Tabela, 		BANCO_DE_DADOS
exm: create database [NOME_DO_BANCO]		
		
		
		
		
		
		
CRIAR TABELA :		
EX:CREATE TABLE[NOME_TABELA]		
		
ID INTERGE,		
NOME CHARACTER VARYING,		
CPF CHAR(11),		
NASCIMENTO DATE		
		
		
alterar tabela:		
		
ALTER TABLE funcionarios		
ALTER COLUMN id SET NOT NULL;		
		
ALTER TABLE funcionarios		
ALTER COLUMN nome SET NOT NULL;		
		
ALTER TABLE funcionarios		
ALTER COLUMN cpf SET NOT NULL;		
		
ALTER TABLE funcionarios		
ALTER COLUMN nascimento SET NOT NULL;		
		
ALTER TABLE funcionarios		
ADD PRIMARY KEY (ID);		
		
		
apagar tabelas:		
		
drop table(nome da tabela)		
		
		
		
		
create table funcionarios		
(		
id integer not null,		
nome character varying not null,		
cpf character varying(11) not null,		
nascimento date not null, 		
primary key (id)		
);		
		
		
		
adicionando um campo na tabela 		
		
ALTER TABLE funcionarios		
add column telefone character varying(11);		
		
		
ALTER TABLE funcionarios		
drop column telefone;		
=========================================================================================================================================
<!DOCTYPE html>
    <head>  
        <title>Teste</title>
    </head>

    <textarea cols="10" rows="10">
        
    </textarea>

    <body>
        <form>
            <p><label>Nome</label><input type="text" name="nome" value=""></p>
            <p><label>Cpf</label><input type="text" name="endereço" value=""></p>
            <p><label>Telefone</label><input type="text" name="telefone" value=""></p>
            <p><label>Email</label><input type="email" name="email" value=""></p>
            <p><label>Senha</label><input type="password" name="senha" value=""></p>
            <p><label>Nome</label><input type="range" name="nome" value=""></p>
            <p><label>Nome</label><input type="datetime" name="nome" value=""></p>
            <p><label>Nome</label><input type="file" name="nome" value=""></p>
            <p><label>Nome</label><input type="checkbox" name="nome" value=""></p>
            <p><label>Nome</label><input type="radio" name="nome" value=""></p>
            <p><label>Nome</label><input type="number" name="nome" value=""></p>
            <p><label>Nome</label><input type="tel" name="nome" value=""></p>
            <p><label>Nome</label><input type="url" name="nome" value=""></p>
            <p><label>Nome</label><input type="button" name="nome" value=""></p>

        </form>
    </body>

</html>
==========================================================================================================


background-color - altera a cor do fundo
color - altera a cor do texto
font-weight - altera o peso da fonte
========================================================================================

create table livro_autor(
	id serial,
	livro_id int not null,
	autor_id int not null,
	constraint livro_livro_autor_fk
		foreign key (livro_id)
			references livro(id),
	constraint autor_livro_autor_fk
		foreign key (autor_id)
			references autor(id),
	primary key (id)
	
	
);
======================================================================================================
insert into biblioteca(cnpj, nome_fantasia)
values('12345678910090', 'Renovação')

=======================================================================================
create table funcionario(
	id serial,
	nome varchar(50)not null,
	data_nascimento date not null,
	ctps varchar (11) not null,
	cpf varchar (16) not null,
	salario numeric (8,2) not null,
	primary key (id),
	empresa_id int not null,
	departamento_id int not null,
	constraint empresa_funcionario_fk
		foreign key(empresa_id)
			references empresa(id),
	constraint departamento_funcionario_fk
		foreign key(departamento_id)
			references departamento (id)
);
===================================================================================

select f.nome, f.salario, d.nome, de.nome from funcionario f
join departamento d
on f.departamento_id = d.id
join dependente de
on de.funcionario_id = f.id


coloque apeledido nas coisa para chamalas 


==========================================================
comandos ubuntu:

npx create-react-app lista-filmes --template typescript
npm i --save-dev @types/styled-components
npm start = inica o servidor
code . = estra pelo vscode
===========================================================
